<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Vitalize</title>
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
	<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>



	<style>
		{% block stylesheet %}

		

			@keyframes animate {
				0% {
					opacity: 0;
					transform: rotate(45deg) translate(-20px, -20px);
				}
				50% {
					opacity: 1;
				}
				100% {
					opacity: 0;
					transform: rotate(45deg) translate(20px, 20px);
				}
			}

			.form-container {
				width: 700px;
				padding: 20px;
				border: 1px solid #ccc;
				border-radius: 10px;
				box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
				margin: auto auto 30px;
			}

			.form-container label {
				margin-bottom: 5px;
			}

			.form-container .form-control {
				width: 100%;
				box-sizing: border-box;
				margin-bottom: 10px;
			}

			.form-container button {
				width: 100%;
			}
			.label-container {
				display: inline-block;
				margin-right: 20px; /* Adjust as needed for spacing */
			}
			.captcha {
				margin: 15px 0;
			}

			.captcha .preview {
				color: #555;
				width: 100%;
				text-align: center;
				height: 40px;
				line-height: 40px;
				letter-spacing: 8px;
				border: 1px dashed #888;
				font-family: "monospace";
				user-select: none;
				/* disable selection */
			}

			.captcha .preview span {
				display: inline-block;
			}

			.captcha .captcha-form {
				display: flex;
				align-items: center;
				justify-content: space-between;
				margin-top: 10px;
			}

			.captcha .captcha-form input {
				width: 100%;
				padding: 8px;
				border: 1px solid #888;
			}

			.captcha .captcha-form .captcha-refresh {
				width: 40px;
				height: 41.6px;
				border: none;
				outline: none;
				background: #888;
				color: #eee;
				cursor: pointer;
			}

		{% endblock %}

	</style>
</head>

<body>

<div class="form-container" style="background-color: white;">
		{{ form_start(form, {'method': 'POST', 'attr': {'novalidate': 'novalidate', 'id': 'myForm', 'onsubmit': 'return validateInput1();'}}) }}
		<h1>Nouveau Ã©venement :</h1>
		<div class="mb-3">
			<label for="{{ form.nom.vars.id }}">{{ form.nom.vars.label }}</label>
			{{ form_row(form.nom) }}
		</div>
		<div class="mb-3">
			<label for="{{ form.date.vars.id }}">{{ form.date.vars.label }}</label>
			{{ form_row(form.date) }}
		</div>
		<div class="mb-3">
			<label for="{{ form.localisation.vars.id }}">{{ form.localisation.vars.label }}</label>
			{{ form_row(form.localisation, {'attr': {'id': 'location' ,'style': 'display:none;'}}) }}
			<input type="text" class="form-control" id="location" name="name" required style="display: block;">
		
			<div id="map-container" style="width: 650px; height: 500px; position: relative;  border-radius: 15px; overflow: hidden; ">
				<div id="map">
					<a href="https://www.maptiler.com" style="position:absolute;left:10px;bottom:10px;z-index:999;"><img src="https://api.maptiler.com/resources/logo.svg" alt="MapTiler logo"></a>
				</div>
			</div>
			    

		</div>
		<div class="mb-3">
			<label for="{{ form.capacite.vars.id }}">{{ form.capacite.vars.label }}</label>
			{{ form_row(form.capacite) }}
		</div>
		<div class="mb-3">
			<label for="{{ form.organisateur.vars.id }}">{{ form.organisateur.vars.label }}</label>
			{{ form_row(form.organisateur) }}
		</div>
		<div class="mb-3">
			<label for="{{ form.description.vars.id }}" class="form-label">{{ form.description.vars.label }}</label>
			{{ form_row(form.description) }}
		</div>
		<div class="mb-3">
			<label for="{{ form.imageEve.vars.id }}" class="form-label">{{ form.imageEve.vars.label }}</label>
			{{ form_row(form.imageEve, {'attr': {'class': 'form-control' }}) }}
		</div>
		<div class="captcha">
			<label for="captcha-input">Enter Captcha</label>
			<div class="preview" id="captcha-container"></div>
			<div class="captcha-form">


				<input type="text" id="word-input" name="word-input" placeholder="Enter captcha text" required>
				<button class="captcha-refresh" type="button" onclick="refreshCaptcha();">
					<i class="fa fa-refresh"></i>
				</button>
			</div>		</div>

		</div>
		<span id="error-message" style="color:red;"></span>
		<br>

		<div class="text-center">
			<button type="submit" class="btn btn-info">{{ button_label|default('Save') }}</button>
		</div>
		{{ form_end(form) }}


	</div>
	
</body>
<body></body></body></div>{% block js %}<script>

document.addEventListener('DOMContentLoaded', function () {

const map = L.map('map').setView([
36.8993, 10.1894
], 15); // starting position
L.tileLayer(`https://api.maptiler.com/maps/openstreetmap/{z}/{x}/{y}.jpg?key=k7HkZl4QR02jUYUjJNsa`, {
// style URL
tileSize: 512,
zoomOffset: -1,
minZoom: 1,
attribution: "\u003ca href=\"https://www.maptiler.com/copyright/\" target=\"_blank\"\u003e\u0026copy; MapTiler\u003c/a\u003e \u003ca href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\"\u003e\u0026copy; OpenStreetMap contributors\u003c/a\u003e",
crossOrigin: true
}).addTo(map);
var marker;
map.on('contextmenu', function (e) {
const lat = e.latlng.lat;
const lng = e.latlng.lng;
console.log(lng);

document.getElementById('location').value = `${lat}, ${lng}`;
if (marker) {
        map.removeLayer(marker);
    }
marker = L.marker([lat, lng]).addTo(map);
});


generateCaptcha();
setCaptcha();
var myForm = document.getElementById('myForm');
myForm.addEventListener('load', function () {});
});
const fonts = ["cursive", "sans-serif", "serif", "monospace"];
let captchaValue = "";

function generateCaptcha() {
let value = btoa(Math.random() * 1000000000);
value = value.substr(0, 5 + Math.random() * 5);
captchaValue = value;
}

function setCaptcha() {
const captchaContainer = document.getElementById("captcha-container");
let html = captchaValue.split("").map((char) => {
const rotate = -20 + Math.trunc(Math.random() * 30);
const font = Math.trunc(Math.random() * fonts.length);
const color = getRandomColor();
return `<span 
            style="
              transform:rotate(${rotate}deg);
              font-family:${
fonts[font]
};
              color:${color};
            "
          >${char}</span>`;
}).join("");
captchaContainer.innerHTML = html;
}


function getRandomColor() {
const letters = '0123456789ABCDEF';
let color = '#';
for (let i = 0; i < 6; i++) {
color += letters[Math.floor(Math.random() * 16)];
}
return color;
}
let inputCaptchaValue = document.querySelector(".captcha input").value;
function validateInput1() {
const input = document.getElementById("word-input");
const errorMessage = document.getElementById("error-message");
const word = captchaValue;

if (input.value.trim() === word.trim()) {
errorMessage.textContent = "";
return true;
} else {
errorMessage.textContent = "The word you entered does not match the generated word.";
return false;
}
}


function refreshCaptcha() {
generateCaptcha();
setCaptcha();
}</script><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>{% endblock %}</body></html></body></html>
